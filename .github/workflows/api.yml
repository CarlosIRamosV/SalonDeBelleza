name: API Build

on:
  push:
    branches: [ "api" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: api

      - name: Prepare Ubuntu
        run: sudo apt-get install -y gcc-mingw-w64-x86-64

      - name: Prepare Rust
        run: rustup target add x86_64-pc-windows-gnu

      - name: Build
        run: cd api && cargo build --release --target x86_64-pc-windows-gnu --verbose

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: api/target/x86_64-pc-windows-gnu/release/api.exe

  create-package:
    name: Create Package
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}-api
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: api

      - name: Prepare
        run: |
          cd api

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}